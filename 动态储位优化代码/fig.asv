clc;
clear all;
close all;
% 假设有 3 个堆垛机，任务结束时间
tasks1 = {'出发点到货2'	'取货2'	'出发点到货19'	'取货19'	'送货15'	'货15到8'	'取货8'	'送货8'	'回缓存区'	'送货18'	'回缓存区'	'送货7'	'回缓存区'	'送货14'	'回缓存区'
    };
tasks2={'出发到货1'	'取货1'	'送货1'	'货1到货11'	'取货11' '等待货3'	'送货3'	'回缓存区'	'等待货4'	'送货4'	'回缓存区'	'等待货9'	'送货9'	'回缓存区'
};
tasks3={'出发到货5'	'取货5'	'送货5'	'货5到货16'	'取货16'	'送货16'	'货16到货12'	'取货12'	'出发到货17'	'取货17'	'出发到货4'	'取货4'	'出发到货20'	'取货20'	'出发到货9'	'取货9'
};
tasks4={'出发到货6'	'取货6'	'出发到货15'	'取货15'	'送货13'	'货13到货18'	'取货18'	'等待货10'	'送货10'	'回缓存区'	'送货11'	'回缓存区'	'送货2'	'回缓存区'
};
tasks5={'出发到货7'	'取货7'	'送货6'	'货6到货13'	'取货13'	'送货19'	'货19到货3'	'取货3'	'出发到货10'	'取货10'	'出发到货14'	'取货14'	'送货17'	'回缓存区'	'送货20'	'回缓存区'
};
% 任务的结束时间（每个任务的结束时间）
end_times1 = [
 3.466455347	6.932910693	10.740603	16.24551989	21.75043677	23.25043677	27.05812908	28.82735985	30.59659062	33.63505216	36.67351369	41.40919981	46.14488593	52.14980281	58.1547197
];
end_times2 = [
3.807692308	7.615384615	11.92307692	13.96157692	17.42803227	30.14001369	34.87569981	39.61138593	50.96245666	55.03937973	59.11630281	69.0492135	70.81844427	72.58767504
];
end_times3 = [
3.966455347	7.932910693	12.93782758	14.43782758	20.94274446	23.481206	27.947706	33.41416135	38.38061669	43.34707204	47.15476435	50.96245666	55.428912	59.89536735	64.47229043	69.0492135
];
end_times4 = [
1.769230769	3.538461538	7.346153846	11.15384615	24.15384615	26.85104615	29.62027692	39.61138593	43.688309	47.76523208	51.07292439	54.38061669	60.38553358	66.39045046
];
end_times5 = [
5.466455347	10.93291069	12.70214146	14.20214146	17.66859681	23.90428292	27.37078292	30.14001369	34.87569981	39.61138593	42.14984746	44.688309	47.72677054	50.76523208	55.73168743	60.69814277
];
num_machines = 5;
num_tasks1 = size(tasks1, 2);
% 任务的开始时间（根据任务结束时间计算开始时间）
start_times1 = zeros(size(end_times1));
for i = 1:num_tasks1
    if i == 1
        start_times1(i) = 0; % 第一个任务从零开始
    else
        start_times1(i) = end_times1(i - 1); % 后续任务的开始时间等于前一个任务的结束时间
    end
end
num_tasks2 = size(tasks2, 2);
% 任务的开始时间（根据任务结束时间计算开始时间）
start_times2 = zeros(size(end_times2));
for i = 1:num_tasks2
    if i == 1
        start_times2(i) = 0; % 第一个任务从零开始
    else
        start_times2(i) = end_times2(i - 1); % 后续任务的开始时间等于前一个任务的结束时间
    end
end
num_tasks3 = size(tasks3, 2);
% 任务的开始时间（根据任务结束时间计算开始时间）
start_times3 = zeros(size(end_times3));
for i = 1:num_tasks3
    if i == 1
        start_times3(i) = 0; % 第一个任务从零开始
    else
        start_times3(i) = end_times3(i - 1); % 后续任务的开始时间等于前一个任务的结束时间
    end
end
num_tasks4= size(tasks4, 2);
% 任务的开始时间（根据任务结束时间计算开始时间）
start_times4 = zeros(size(end_times4));
for i = 1:num_tasks4
    if i == 1
        start_times4(i) = 0; % 第一个任务从零开始
    else
        start_times4(i) = end_times4(i - 1); % 后续任务的开始时间等于前一个任务的结束时间
    end
end
num_tasks5 = size(tasks5, 2);
% 任务的开始时间（根据任务结束时间计算开始时间）
start_times5 = zeros(size(end_times5));
for i = 1:num_tasks5
    if i == 1
        start_times5(i) = 0; % 第一个任务从零开始
    else
        start_times5(i) = end_times5(i - 1); % 后续任务的开始时间等于前一个任务的结束时间
    end
end
% 任务持续时间
durations1 = end_times1 - start_times1;
durations2 = end_times2 - start_times2;
durations3 = end_times3 - start_times3;
durations4 = end_times4 - start_times4;
durations5 = end_times5 - start_times5;
% 为不同的堆垛机分配 y 坐标
y_offsets = [0, 1, 2,3,4,5]; % 每个堆垛机的偏移量，保证它们不重叠
machine_labels = {'堆垛机1', '堆垛机2', '堆垛机3', '堆垛机4', '堆垛机5'}; % 堆垛机标签

% 创建甘特图
figure;
hold on;

% 绘制每个堆垛机的任务
for m = 1:num_machines
    % 获取每个堆垛机的任务结束时间和任务开始时间
    task_indices = (m-1)*5 + (1:5);  % 假设每个堆垛机处理5个任务
    for i = task_indices
        % 绘制任务条，堆垛机的任务条在不同的 y 坐标上
        barh(i, durations(i), 'FaceColor', [0.2 0.6 0.8] * m, 'EdgeColor', 'k', 'BarWidth', 0.8);
    end
end

% 设置图形的标题和标签
title('堆垛机任务甘特图');
xlabel('时间');
yticks(1:num_tasks);
yticklabels(tasks(1, :));  % 显示任务名称
grid on;
hold off;
